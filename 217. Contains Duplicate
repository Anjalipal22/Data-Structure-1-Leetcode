 //Brute force O(n2)
 bool containsDuplicate(vector<int>& nums) {
 for(int i=0;i<nums.size();i++)
        {
             for(int j=i+1;j<nums.size();j++)
             {
                 if(nums[i]==nums[j])
                 {
                     return true;
                 }
             }
    }
        return false;
    }
 // O(nlogn+n)
 bool containsDuplicate(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for(int i=1;i<=nums.size()-1;i++)
        {
            if(nums[i]==nums[i-1])
                return true;
        }
        return false;
        
    }
    //Hasing O(n)
    map<int,int> m;
        for(int i=0;i<nums.size();i++)
        {
            m[nums[i]]++;
        }
        map<int,int>::iterator it;
        for(auto it:m)
        {
            if(it.second>1)
                return true;
        }
        return false;
        //Using array
        
